{"ast":null,"code":"import React from \"react\";\nimport Viagem from \"./Viagem\";\nclass Vector {\n  constructor() {\n    this.viagens = [new Viagem(\"São Paulo\", \"Rio de Janeiro\", \"6\", \"02-06-2023\"), new Viagem(\"Brasília\", \"Salvador\", \"2\", \"05-06-2023\")];\n  }\n  addViagem(origem, destino, duracao, deadline) {\n    let viagem = new Viagem(origem, destino, duracao, deadline);\n    this.viagens.push(viagem);\n  }\n  sortViagensByDeadline() {\n    this.viagens.sort((a, b) => a.deadline - b.deadline);\n  }\n  scheduleToMinimizeLateness() {\n    this.sortViagensByDeadline();\n    let time = 0;\n    for (let viagem of this.viagens) {\n      viagem.startTime = time;\n      viagem.endTime = time + viagem.duracao;\n      viagem.lateness = Math.max(0, viagem.endTime - viagem.deadline);\n      time = viagem.endTime;\n    }\n  }\n}\nexport default Vector;","map":{"version":3,"names":["React","Viagem","Vector","constructor","viagens","addViagem","origem","destino","duracao","deadline","viagem","push","sortViagensByDeadline","sort","a","b","scheduleToMinimizeLateness","time","startTime","endTime","lateness","Math","max"],"sources":["/home/lramon2001/Desktop/unb/projeto-de-algoritmos/Greed_ZeInacioTrips2/src/Vector/Vector.js"],"sourcesContent":["import React from \"react\";\nimport Viagem from \"./Viagem\";\n\nclass Vector{\n    constructor() {\n        this.viagens = [\n            new Viagem(\"São Paulo\", \"Rio de Janeiro\", \"6\", \"02-06-2023\"),\n            new Viagem(\"Brasília\", \"Salvador\", \"2\", \"05-06-2023\"),\n        ];\n    \n    }\n    \n    addViagem(origem, destino, duracao, deadline) {\n        let viagem = new Viagem(origem, destino, duracao, deadline);\n        this.viagens.push(viagem);\n    }\n\n    sortViagensByDeadline() {\n        this.viagens.sort((a, b) => a.deadline - b.deadline);\n    }\n\n    scheduleToMinimizeLateness() {\n        this.sortViagensByDeadline();\n        let time = 0;\n        for (let viagem of this.viagens) {\n            viagem.startTime = time;\n            viagem.endTime = time + viagem.duracao;\n            viagem.lateness = Math.max(0, viagem.endTime - viagem.deadline);\n            time = viagem.endTime;\n        }\n    }\n}\n\nexport default Vector;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,MAAM;EACRC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,OAAO,GAAG,CACX,IAAIH,MAAM,CAAC,WAAW,EAAE,gBAAgB,EAAE,GAAG,EAAE,YAAY,CAAC,EAC5D,IAAIA,MAAM,CAAC,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,YAAY,CAAC,CACxD;EAEL;EAEAI,SAASA,CAACC,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAE;IAC1C,IAAIC,MAAM,GAAG,IAAIT,MAAM,CAACK,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;IAC3D,IAAI,CAACL,OAAO,CAACO,IAAI,CAACD,MAAM,CAAC;EAC7B;EAEAE,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAACR,OAAO,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACL,QAAQ,GAAGM,CAAC,CAACN,QAAQ,CAAC;EACxD;EAEAO,0BAA0BA,CAAA,EAAG;IACzB,IAAI,CAACJ,qBAAqB,CAAC,CAAC;IAC5B,IAAIK,IAAI,GAAG,CAAC;IACZ,KAAK,IAAIP,MAAM,IAAI,IAAI,CAACN,OAAO,EAAE;MAC7BM,MAAM,CAACQ,SAAS,GAAGD,IAAI;MACvBP,MAAM,CAACS,OAAO,GAAGF,IAAI,GAAGP,MAAM,CAACF,OAAO;MACtCE,MAAM,CAACU,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEZ,MAAM,CAACS,OAAO,GAAGT,MAAM,CAACD,QAAQ,CAAC;MAC/DQ,IAAI,GAAGP,MAAM,CAACS,OAAO;IACzB;EACJ;AACJ;AAEA,eAAejB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}